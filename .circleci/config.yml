version: 2.1

jobs:
  build-frontend:
    docker:
      - image: cimg/node:21.4.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: built dist folder
          command: |
            cd frontend
            npm i
            npm run build -- --mode production
      - persist_to_workspace:
          root: frontend
          paths:
            - dist

  build-backend:
    machine:
      image: ubuntu-2204:2022.07.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Build and tag wg-vpn image
          command: |
            cd ~/repo/backend
            docker build -t website-backend:latest .
        run:
          name: export backend image to tar
          command: |
            cd ~/repo/backend
            mkdir -p .builds
            cd .builds/
            docker save -o website-backend.tar website-backend
      - persist_to_workspace:
          root: backend
          paths:
            - .builds
            - postman
            - quickstart

  test-backend:
    machine:
      image: ubuntu-2204:2022.07.1
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo/backend
      - run: 
          name: load build image
          command: |
            cd ~/repo/backend/.builds/
            docker load < website-backend.tar
      - run: 
          name: bring up backend
          command: |
            cd ~/repo/backend/quickstart/
            docker-compose up

  git-leaks:
    machine:
      image: ubuntu-2204:2022.07.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Scan for gitLeaks
          command: |
            docker run -v ~/repo:/path zricethezav/gitleaks:latest detect --source="/path" -v

  deploy-frontend:
    machine:
      image: ubuntu-2204:2022.07.1
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo/frontend
      - run: rsync -r -t -p -v --progress -e 'ssh -i ~/.ssh/id_rsa' -s frontend/dist/ ${SSH_USER}@${SERVER_IP}:/usr/share/nginx/html

workflows:
  version: 2
  untagged_build_test:
    jobs:
      - git-leaks
      - build-frontend:
          requires:
            - git-leaks
      - build-backend:
          requires:
            - git-leaks
      - deploy-frontend:
          requires:
            - build-frontend
          filters:
            branches:
              only:
                - main
